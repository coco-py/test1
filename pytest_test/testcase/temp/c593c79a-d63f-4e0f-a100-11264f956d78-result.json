{"name": "test_login[caseinfo0]", "status": "broken", "statusDetails": {"message": "json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)", "trace": "self = <testcase.test_send_request.TestSendRequest object at 0x000001FDEDCF36D8>\ncaseinfo = {'data': {'backurl': 'http://47.107.116.139/phpwind/', 'csrf_token': 'csrf_token', 'invite': '', 'password': '123456',...h': 'XMLHttpRequest'}, 'name': '发送post请求', 'request': {'method': 'post', 'url': 'http://47.107.116.139/phpwind/'}, ...}\n\n    @pytest.mark.parametrize(\"caseinfo\",YamlUtil().read_testcase_yaml(\"post_elit.yaml\"))\n    def test_login(self,caseinfo):\n        print(caseinfo[\"name\"])\n        print(caseinfo[\"request\"][\"url\"])\n        print(caseinfo[\"request\"][\"method\"])\n        print(caseinfo[\"data\"])\n        print(caseinfo[\"headers\"][\"X-Requested-With\"])\n        print(caseinfo[\"validate\"])\n        csrf_token=YamlUtil().read_extract_yaml(\"csrf_token\")                                                          #使用封装方法来进行获取tonken\n        url=caseinfo[\"request\"][\"url\"]\n        data={\n            \"username\":\"cgf\",\n            \"password\":\"123456\",\n            \"csrf_token\":csrf_token,\n            \"backurl\":\"http://47.107.116.139/phpwind/\",\n            \"invite\":\"\"\n        }\n        headers={\n            \"Accept\":\"application/json, text/javascript, /; q=0.01\",\n            \"X-Requested-With\":\"XMLHttpRequest\"\n        }\n        # time.sleep(4)\n        rep=TestSendRequest.session.request(\"post\",url,data=data,headers=headers)\n>       print(rep.json())\n\ntest_send_request.py:70: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nD:\\Python36\\lib\\site-packages\\requests\\models.py:898: in json\n    return complexjson.loads(self.text, **kwargs)\nD:\\Python36\\lib\\json\\__init__.py:354: in loads\n    return _default_decoder.decode(s)\nD:\\Python36\\lib\\json\\decoder.py:339: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <json.decoder.JSONDecoder object at 0x000001FDECAAD518>\ns = '<!doctype html>\\r\\n<html>\\r\\n<head>\\r\\n<meta charset=\"UTF-8\" />\\r\\n<title>本站新帖 - phpwind 9.0 - Powered by phpwind</ti...js(GV.JS_ROOT +\\'pages/bbs/threadManage.js?v=\\' + GV.JS_VERSION);\\r\\n\\t}\\r\\n});\\r\\n</script>\\r\\n\\r\\n</body>\\r\\n</html>'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nD:\\Python36\\lib\\json\\decoder.py:357: JSONDecodeError"}, "parameters": [{"name": "caseinfo", "value": "{'name': '发送post请求', 'request': {'method': 'post', 'url': 'http://47.107.116.139/phpwind/'}, 'data': {'username': 'cgf', 'password': '123456', 'csrf_token': 'csrf_token', 'backurl': 'http://47.107.116.139/phpwind/', 'invite': ''}, 'headers': {'Accept': 'application/json, text/javascript, /; q=0.01', 'X-Requested-With': 'XMLHttpRequest'}, 'validate': 'None'}"}], "start": 1662028134177, "stop": 1662028134256, "uuid": "c6456883-4a4a-4635-b2f8-89143bbdcf1a", "historyId": "5cc1ade132e65f5c027c88d320025260", "testCaseId": "2a8722564ab6df0c1bfe450b7632b02c", "fullName": "testcase.test_send_request.TestSendRequest#test_login", "labels": [{"name": "parentSuite", "value": "testcase"}, {"name": "suite", "value": "test_send_request"}, {"name": "subSuite", "value": "TestSendRequest"}, {"name": "host", "value": "LAPTOP-9IKMHBCE"}, {"name": "thread", "value": "17000-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.test_send_request"}]}